<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>189</x>
      <y>203</y>
      <w>189</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>Game(controller)
bg=red
--
- window: GameFrame
- panel: GamePanel
- gameThread: Thread
- playing: Playing
- menu: Menu
+ SCALE: final static float
- FPS_SET: final int
- UPS_SET: final int
+ TILES_DEFAULT_SIZE: final static int
+ TILES_IN_WIDTH: finat static int
+ TILES_IN_HEIGHT: final static int
+ TILES_SIZE: final static int
+ GAME_WIDTH: final static int
+ GAME_HEIGHT: final static int
--
+ Game(): constructor
- initClasses(): void
- startGameLoop(): void
+ update(): void
+ render(Graphics): void
+ run(): void
+ windowLostFocus(): void
+ Getters

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>602</x>
      <y>203</y>
      <w>175</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>GameFrame
bg=red
--
-app : Game(controller)
-panel : GamePanel
--
+GameFrame(Game) : constructor
-setupFrame() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>378</x>
      <y>203</y>
      <w>224</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>GamePanel
bg=red
--
- game: Game(controller)
- mouse: MouseInput
--
+ GamePanel(Game) : constructor
# paintComponent(Graphics) : void
- setPanelSize(): void
+ updateGame(): void
+ getGame(): game
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>854</x>
      <y>336</y>
      <w>210</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>KeyboardInputs
bg=orange
--
- panel : GamePanel
--
+KeyboardInputs(GamePanel) : constructor
+keyTyped(KeyEvent) : public
+keyPressed(KeyEvent) : public
+KeyReleased(KeyEvent) : public</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>854</x>
      <y>469</y>
      <w>217</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>MouseInputs
bg=orange
--
- panel : GamePanel
--
+MouseInputs(GamePanel) : constructor
+mouseDragged(MouseEvent) : public
+mousePressed(MouseEvent) : public
+mouseReleased(mouseEvent) : public
+mouseMoved(mouseEvent) : public
+mouseClicked(mouseEvent) : public
+mouseEntered(mouseEvent) : public
+mouseExited(mouseEvent) : public</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>21</x>
      <y>203</y>
      <w>168</w>
      <h>413</h>
    </coordinates>
    <panel_attributes>Player
bg=yellow
transparency=0
layer=1
--
- animations: BufferedImage[][]
- animationTick: int
- animationIndex: int
- animationSpeed: int

- moving: boolean
- attacking: boolean
- left: boolean
- right: boolean
- up: boolean
- down: boolean
- jump: boolean
- inAir: boolean

- playerSpeed: float
- xDrawOffSet: float
- yDrawOffSet: float
- airSpeed: float
- gravity: float
- jumpSpeed: float
- fallSpeedAfterCollisionL float
-

+ Player(): constructor
+ get/set()
+ update(): void
+ render(): void
- updateAnimationTick(): void
- setanimation(): void
- resetanimationTick(): void
- updatePos(): void
- jump(): void
- resetInAir(): void
- updateXPos(float): void
- loadAnimation(): void
- loadLevelData(int[][]): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>7</y>
      <w>217</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>/Entity/
bg=yellow
-
# xDelta: float
# yDelta: float
# width:int
# height: int
# hitbox: Rectangle2D.Float
-
+Entity(float, float): constructor
#drawhitBox(Graphics): void
# initHitbox(float, float, int, int): void
+ getHitBox(): Rectangle2D.Float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>98</x>
      <y>140</y>
      <w>28</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>378</x>
      <y>371</y>
      <w>182</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>/Statemethods/
bg=magenta
-
+ update(): void
+ draw(Graphics): void
+ mouseClicked(MouseEvent): void
+ mousePressed(MouseEvent): void
+ mouseReleased(MouseEvent): void
+ mouseMoved(MouseEvent): void
+ keyPressed(Keyevent): void
+ keyReleased(KeyEvent): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>637</x>
      <y>385</y>
      <w>182</w>
      <h>238</h>
    </coordinates>
    <panel_attributes>Playing
bg=magenta
-
- player: Player
- levelManager: LevelManager
-
+ Playing(game): constructor
- initClasses(): void
+ windowFocusLost(): void
+ getPlayer(): Player
+ update(): void
+ draw(Graphics): void
+ mouseClicked(MouseEvent): void
+ mousePressed(MouseEvent): void
+ mouseReleased(MouseEvent): void
+ mouseMoved(MouseEvent): void
+ keyPressed(Keyevent): void
+ keyReleased(KeyEvent): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>581</y>
      <w>182</w>
      <h>238</h>
    </coordinates>
    <panel_attributes>Menu
bg=magenta
-
- buttons: MenuButton[]
- backgroundImage: BufferedImage
- menuX: int
- menuY: int
- menuWidth: int
- menuHeight: int
-
+ Menu(game): constructor
- loadBackground(): void
- loadButtons(): void
+ update(): void
+ draw(Graphics): void
+ mouseClicked(MouseEvent): void
+ mousePressed(MouseEvent): void
+ mouseReleased(MouseEvent): void
+ mouseMoved(MouseEvent): void
+ keyPressed(Keyevent): void
+ keyReleased(KeyEvent): void
- resetButtons(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>189</x>
      <y>483</y>
      <w>203</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>State
bg=magenta
-
# game: Game(controller)
-
+ State(game): constructor
+ isIn(MouseEvent, MenuButton): boolean
+ getGame(): Game</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>602</x>
      <y>280</y>
      <w>133</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Gamestate
bg=magenta
-
+ PLAYING
+ MENU
+ OPTIONS
+ QUIT
+ state: static Gamestate</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>588</x>
      <y>0</y>
      <w>182</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>LevelManager
bg=green
-
- Game: game
- levelSprite: BufferedImage[]
- private levelOne: Level
-
+ LevelManager(Game): Constructor
- importOutsideSprite(): void
+ draw(Graphics): void
+ update(): void
+ getCurrentlevel(): Level
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>399</x>
      <y>0</y>
      <w>161</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>Level
bg=green
-
- levelData: int[][]
-
+ Level(int[][]): Constructor
+ getSpriteIndex(int,int): int
+ getLevelData(): int[][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>798</x>
      <y>28</y>
      <w>252</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>MenuButton
bg=blue
-
- xPosition: int
- yPosition: int
- rowIndex: int
- index: int
- xOffsetCenter: int
- state: Gamestate
- images: bufferedImage[]
- mouseOver: boolean
- mousePressed: boolean
- bounds: rectangle
-
+ MenuButton(int, int, int, Gamestate): Constructor
- initBounds(): void
- loadImages(): void
+ draw(graphics): void
+ update(): void
+ setmouseOVer(boolean): void
+ isMouseOver(): boolean
+ setmousePressed(boolean)
+ public getbounds(): Rectangle
+ applyGamestate(): void
+ resetBools(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>217</x>
      <y>819</y>
      <w>217</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>LoadSave
bg=gray
-
+ PLAYER_ATLAS: static final String
+ LEVEL_ATLAS: static final String
+ LEVEL_ONE_DATA: static final String
+ MENU_BUTTONS: static final String
+ MENU_BACKGROUND: static final String
-
+ GetSpriteAtlas(String): BufferedImage
+ GetLevelData(): int[][]
+ ReadFromFile(file): ArrayList&lt;Integer&gt;
+ GetlevelData(String): int[][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>147</x>
      <y>952</y>
      <w>378</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>HelpMethods
bg=gray
-

-
+ CanMoveHere(float, flaot, float, float, int[][]): static boolean
- IsSolid(float, float, int[][]): static boolean
+ GetEntityXPosNextToWall(Rectangle2D.Float, float): static  float
+ GetEntityYPosUnderRoofOrAboveFloor(rectangle2D.Float, float): static float
+ IsEntityOnFloor(Rectangle2D.Float, int[][]): static boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>714</x>
      <y>931</y>
      <w>196</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Constants.Directions
bg=gray
-
+ LEFT: static final int
+ UP: static final int
+ DOWN: static final int
+ RIGHT: static final int
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>553</x>
      <y>420</y>
      <w>98</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>469</x>
      <y>476</y>
      <w>35</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>273</x>
      <y>546</y>
      <w>161</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>385</x>
      <y>497</y>
      <w>266</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;360.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>63</x>
      <y>658</y>
      <w>301</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>Utilz
bg=gray
-

-
ArrayListTo2Dint(ArrayLIst&lt;Integer&gt;, int, int): static int[][]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>721</x>
      <y>833</y>
      <w>182</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Constants.UI.Buttons
bg=gray
-
+ B_WIDTH_DEFAULT: static final int
+ B_HEIGHT_DEFAILT: static final int
+ B_WIDTH: static final int
+ B_HEIGHT: static final int
-
layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>714</x>
      <y>1029</y>
      <w>196</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>Constants.PlayerConstants
bg=gray
-
+ IDLE: static final int
+ RUNNING: static final int
+ JUMP: static final int
+ FALLING: static final int
+ GROUND: static final int
+ HIT: static final int
+ ATTACK_ONE: static final int
+ ATTACK_JUMP_ONE: static final int
+ ATTACK_JUMP_ONE: static finat int
-
+ getSpriteAmount(int): static int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>686</x>
      <y>756</y>
      <w>252</w>
      <h>455</h>
    </coordinates>
    <panel_attributes>Constants
bg=gray
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>714</x>
      <y>784</y>
      <w>196</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>Constants.UI
bg=gray
-

-
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
